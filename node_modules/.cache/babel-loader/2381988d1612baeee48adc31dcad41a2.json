{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchNewRestaurants = createAsyncThunk(\"restaurants/fetchNewRestaurants\", async () => {\n  const response = await axios.get(\"http://localhost:8080/restaurants/new/1\");\n  return response.data;\n});\nconst newRestaurantsSlice = createSlice({\n  name: \"newRestaurants\",\n  initialState: {\n    newRestaurants: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {}\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchNewRestaurants.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchNewRestaurants.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.newRestaurants = action.payload.result;\n    });\n  }\n\n});\nexport const restaurantsActions = newRestaurantsSlice.actions;\nexport default newRestaurantsSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/store/newRestaurantsSlice.ts"],"names":["createAsyncThunk","createSlice","axios","fetchNewRestaurants","response","get","data","newRestaurantsSlice","name","initialState","newRestaurants","isLoading","reducers","toggle","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","result","restaurantsActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAGH,gBAAgB,CAAC,iCAAD,EAAoC,YAAY;AACjG,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,yCAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHkD,CAA5C;AAKP,MAAMC,mBAAmB,GAAGN,WAAW,CAAC;AACtCO,EAAAA,IAAI,EAAE,gBADgC;AAEtCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,cAAc,EAAE,EADJ;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFwB;AAMtCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ,CACb;;AAFO,GAN4B;;AAUtCC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWd,mBAAmB,CAACe,OAD/B,EACwC,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACvDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWd,mBAAmB,CAACiB,SAJ/B,EAI0C,CAACN,KAAD,EAAQK,MAAR,KAAmB;AACzDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,cAAN,GAAsBS,MAAM,CAACE,OAAP,CAAeC,MAArC;AACD,KAPH;AAQD;;AAnBqC,CAAD,CAAvC;AAsBA,OAAO,MAAMC,kBAAkB,GAAGhB,mBAAmB,CAACiB,OAA/C;AAEP,eAAejB,mBAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchNewRestaurants = createAsyncThunk(\"restaurants/fetchNewRestaurants\", async () => {\n  const response = await axios.get(\"http://localhost:8080/restaurants/new/1\");\n  return response.data;\n});\n\nconst newRestaurantsSlice = createSlice({\n  name: \"newRestaurants\",\n  initialState: {\n    newRestaurants: [],\n    isLoading: false,\n  },\n  reducers: {\n    toggle(state) {\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchNewRestaurants.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchNewRestaurants.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.newRestaurants= action.payload.result;        \n      })\n  },\n});\n\nexport const restaurantsActions = newRestaurantsSlice.actions;\n\nexport default newRestaurantsSlice;\n"]},"metadata":{},"sourceType":"module"}