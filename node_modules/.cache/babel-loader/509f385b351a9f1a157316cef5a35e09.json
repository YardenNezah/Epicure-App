{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantsGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const [pageNumber, setPageNumber] = useState(1);\n  const dispatch = useAppDispatch();\n  const {\n    restaurants\n  } = useSelector(state => state.restaurants);\n  const {\n    newRestaurants\n  } = useSelector(state => state.newRestaurants);\n  const {\n    popularRestaurants\n  } = useSelector(state => state.popularRestaurants);\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n  }, []);\n  console.log(newRestaurants); // const passFilter = (item: any) => {\n  //   switch (filter) {\n  //     case \"all\":\n  //       return true;\n  //     case \"new\":\n  //       if (item.isNewRestaurant) {\n  //         return true;\n  //       } else return false;\n  //     case \"popular\":\n  //       if (item.isPopular) {\n  //         return true;\n  //       } else return false;\n  //     case \"open\":\n  //       const opening:number = item.openingHour.split(\":\")[0] * 1;\n  //       const closing:number = item.closingHour.split(\":\")[0] * 1;\n  //       const date= new Date();\n  //       const now:number = date.getHours();\n  //       if (now >= opening && now <= closing) {\n  //         return true;\n  //       } else return false;\n  //     default:\n  //       return true;\n  //   }\n  // };\n\n  const filteredArr = restaurants.filter(item => passFilter(item));\n  const numberOfPages = Math.ceil(filteredArr.length / 6);\n  let pages = [];\n\n  for (let page = 1; page <= numberOfPages; page++) {\n    pages.push( /*#__PURE__*/_jsxDEV(Link, {\n      className: \"page\",\n      to: `/restaurants/${page}`,\n      onClick: () => setPageNumber(page),\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurants-grid\",\n      children: filteredArr.length <= 6 && filteredArr.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/restaurant/${item.name}`,\n        className: \"to-restaurant-btn\",\n        children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n          title: item.name,\n          detail: item.chef,\n          img: item.mobileImage\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: filteredArr.length > 6 && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restaurants-grid\",\n          children: filteredArr.slice(pageNumber * 6 - 6, pageNumber * 6).map(item => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/restaurant/${item.name}`,\n            className: \"to-restaurant-btn\",\n            children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n              title: item.name,\n              detail: item.chef,\n              img: item.mobileImage\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: pages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantsGrid, \"20UlPM1B0CBckuoL8P/N3kc7fT8=\", false, function () {\n  return [useAppDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = RestaurantsGrid;\nexport default RestaurantsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx"],"names":["BeigeCard","useSelector","Link","useAppDispatch","Fragment","useEffect","useState","fetchRestaurants","fetchNewRestaurants","RestaurantsGrid","filter","pageNumber","setPageNumber","dispatch","restaurants","state","newRestaurants","popularRestaurants","console","log","filteredArr","item","passFilter","numberOfPages","Math","ceil","length","pages","page","push","map","name","chef","mobileImage","_id","slice"],"mappings":"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","sourcesContent":["import BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { fetchPopularRestaurants } from \"../../../store/popularRestaurantsSlice\";\n\nconst RestaurantsGrid = ({ filter }: any) => {\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n  const { newRestaurants } = useSelector((state: any) => state.newRestaurants);\n  const { popularRestaurants } = useSelector((state: any) => state.popularRestaurants);\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n  }, []);\nconsole.log(newRestaurants)\n  // const passFilter = (item: any) => {\n  //   switch (filter) {\n  //     case \"all\":\n  //       return true;\n  //     case \"new\":\n  //       if (item.isNewRestaurant) {\n  //         return true;\n  //       } else return false;\n  //     case \"popular\":\n  //       if (item.isPopular) {\n  //         return true;\n  //       } else return false;\n  //     case \"open\":\n  //       const opening:number = item.openingHour.split(\":\")[0] * 1;\n  //       const closing:number = item.closingHour.split(\":\")[0] * 1;\n  //       const date= new Date();\n  //       const now:number = date.getHours();\n  //       if (now >= opening && now <= closing) {\n  //         return true;\n  //       } else return false;\n  //     default:\n  //       return true;\n  //   }\n  // };\n\n  const filteredArr: object[] = restaurants.filter((item: any) => passFilter(item));\n  const numberOfPages:number = Math.ceil(filteredArr.length / 6);\n  let pages = [];\n  for (let page = 1; page <= numberOfPages; page++) {\n    pages.push(\n      <Link\n        key={page}\n        className=\"page\"\n        to={`/restaurants/${page}`}\n        onClick={() => setPageNumber(page)}>\n        {page}\n      </Link>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"restaurants-grid\">\n        {filteredArr.length <= 6 &&\n          filteredArr.map((item: any) => (\n            <Link to={`/restaurant/${item.name}`} className=\"to-restaurant-btn\" key={item._id}>\n              <BeigeCard\n                key={item.name}\n                title={item.name}\n                detail={item.chef}\n                img={item.mobileImage}\n              ></BeigeCard>\n            </Link>\n          ))}\n      </div>\n      <Fragment>\n        {filteredArr.length > 6 && (\n          <Fragment>\n            <div className=\"restaurants-grid\">\n              {filteredArr\n                .slice(pageNumber * 6 - 6, pageNumber * 6)\n                .map((item: any) => (\n                  <Link\n                    to={`/restaurant/${item.name}`}\n                    className=\"to-restaurant-btn\" key={item._id}\n                  >\n                    <BeigeCard\n                      key={item.name}\n                      title={item.name}\n                      detail={item.chef}\n                      img={item.mobileImage}\n                    ></BeigeCard>\n                  </Link>\n                ))}\n            </div>\n            <div className=\"pagination\">{pages}</div>\n          </Fragment>\n        )}\n      </Fragment>\n    </Fragment>\n  );\n};\nexport default RestaurantsGrid;\n"]},"metadata":{},"sourceType":"module"}