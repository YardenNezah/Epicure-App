{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchOpenRestaurants = createAsyncThunk(\"restaurants/fetchOpenRestaurants\", async () => {\n  const response = await axios.get(\"http://localhost:8080/restaurants/open\");\n  return response.data;\n});\nconst openRestaurantsSlice = createSlice({\n  name: \"openRestaurants\",\n  initialState: {\n    openRestaurants: [],\n    isLoading: false\n  },\n  reducers: {\n    toggle(state) {}\n\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchOpenRestaurants.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchOpenRestaurants.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.openRestaurants = action.payload.result;\n    });\n  }\n\n});\nexport const restaurantsActions = openRestaurantsSlice.actions;\nexport default openRestaurantsSlice;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/store/openRestaurantsSlice.ts"],"names":["createAsyncThunk","createSlice","axios","fetchOpenRestaurants","response","get","data","openRestaurantsSlice","name","initialState","openRestaurants","isLoading","reducers","toggle","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","result","restaurantsActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAGH,gBAAgB,CAAC,kCAAD,EAAqC,YAAY;AACnG,QAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,wCAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHmD,CAA7C;AAKP,MAAMC,oBAAoB,GAAGN,WAAW,CAAC;AACvCO,EAAAA,IAAI,EAAE,iBADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,EADL;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAFyB;AAMvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ,CACb;;AAFO,GAN6B;;AAUvCC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrBA,IAAAA,OAAO,CACJC,OADH,CACWd,oBAAoB,CAACe,OADhC,EACyC,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AACxDL,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWd,oBAAoB,CAACiB,SAJhC,EAI2C,CAACN,KAAD,EAAQK,MAAR,KAAmB;AAC1DL,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,eAAN,GAAuBS,MAAM,CAACE,OAAP,CAAeC,MAAtC;AACD,KAPH;AAQD;;AAnBsC,CAAD,CAAxC;AAsBA,OAAO,MAAMC,kBAAkB,GAAGhB,oBAAoB,CAACiB,OAAhD;AAEP,eAAejB,oBAAf","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchOpenRestaurants = createAsyncThunk(\"restaurants/fetchOpenRestaurants\", async () => {\n  const response = await axios.get(\"http://localhost:8080/restaurants/open\");\n  return response.data;\n});\n\nconst openRestaurantsSlice = createSlice({\n  name: \"openRestaurants\",\n  initialState: {\n    openRestaurants: [],\n    isLoading: false,\n  },\n  reducers: {\n    toggle(state) {\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchOpenRestaurants.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchOpenRestaurants.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.openRestaurants= action.payload.result;        \n      })\n  },\n});\n\nexport const restaurantsActions = openRestaurantsSlice.actions;\n\nexport default openRestaurantsSlice;\n"]},"metadata":{},"sourceType":"module"}