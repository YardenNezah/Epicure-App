{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/restaurantPage/RestaurantPage.tsx\",\n    _s = $RefreshSig$();\n\nimport clock from \"../../../assets/clock-icon.svg\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./RestaurantPage.scss\";\nimport DishPage from \"../dishPage/DishPage\";\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect, Fragment, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchDishes } from \"../../../store/dishDataSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantPage = () => {\n  _s();\n\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [dishName, setDishName] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const {\n    restaurants\n  } = useSelector(state => state.restaurants);\n  const {\n    dishes\n  } = useSelector(state => state.dishes);\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchDishes());\n  }, []);\n\n  const openDishCardHandler = dish => {\n    setOpenDishCard(true);\n    setDishName(dish);\n  };\n\n  const params = useParams();\n  const restaurantDetails = restaurants.filter(item => item.name === params.restaurantName);\n  const restaurantDishes = dishes.filter(item => item.restaurant === params.restaurantName);\n  const mealsTypes = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n\n  const passFilter = item => {\n    switch (filter) {\n      case \"all\":\n        return true;\n\n      case \"Breakfast\":\n        if (item.dishPage === '') {\n          return true;\n        } else return false;\n\n      case \"Lunch\":\n        if (item.isPopular) {\n          return true;\n        } else return false;\n\n      case \"Dinner\":\n        if (now >= opening && now <= closing) {\n          return true;\n        } else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  const opening = restaurantDetails[0].openingHour.split(\":\")[0] * 1;\n  const closing = restaurantDetails[0].closingHour.split(\":\")[0] * 1;\n  const now = new Date().getHours();\n  const ifOpen = now >= opening && now <= closing;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), openDishCard && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dish-container\",\n        onClick: () => setOpenDishCard(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-dish-page\",\n        onClick: () => setOpenDishCard(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(DishPage, {\n        dish: dishName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), !openDishCard && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: restaurantDetails[0].desktopImage,\n        alt: \"restaurant\",\n        className: \"restaurant-page-img\",\n        srcSet: `${restaurantDetails[0].bigImage} 800w`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: params.restaurantName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: restaurantDetails[0].chef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), ifOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: clock,\n          alt: \"clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Open now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"categories-div\",\n        children: mealsTypes.map(type => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `#${type}`,\n          className: \"type-meal-link\",\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-by-type\",\n        children: mealsTypes.map(type => {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"type-container\",\n              id: type,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"type-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"restaurants-container\",\n              children: restaurantDishes.map(dish => {\n                if (dish.dishType === mealsTypes[0]) return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"to-dish-btn\",\n                  onClick: () => openDishCardHandler(dish.name),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"restaurant-item\",\n                    children: /*#__PURE__*/_jsxDEV(DishSmallCard, {\n                      img: dish.mobileImage,\n                      signatureDesktopImage: dish.desktopImage,\n                      title: dish.name,\n                      detail: dish.description,\n                      price: dish.price\n                    }, dish.key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantPage, \"nYcRB8UkVfzCbMWmDWuHjoqx39E=\", false, function () {\n  return [useAppDispatch, useSelector, useSelector, useParams];\n});\n\n_c = RestaurantPage;\nexport default RestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/restaurantPage/RestaurantPage.tsx"],"names":["clock","DishSmallCard","DishPage","useParams","Footer","Header","useSelector","useAppDispatch","useEffect","Fragment","useState","fetchRestaurants","fetchDishes","RestaurantPage","openDishCard","setOpenDishCard","dishName","setDishName","dispatch","restaurants","state","dishes","openDishCardHandler","dish","params","restaurantDetails","filter","item","name","restaurantName","restaurantDishes","restaurant","mealsTypes","passFilter","dishPage","isPopular","now","opening","closing","openingHour","split","closingHour","Date","getHours","ifOpen","desktopImage","bigImage","chef","map","type","dishType","mobileImage","description","price","key"],"mappings":"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","sourcesContent":["import clock from \"../../../assets/clock-icon.svg\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./RestaurantPage.scss\";\nimport DishPage from \"../dishPage/DishPage\";\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect, Fragment, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchDishes } from \"../../../store/dishDataSlice\";\n\nconst RestaurantPage = () => {\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [dishName, setDishName] = useState(\"\");\n\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n  const { dishes } = useSelector((state: any) => state.dishes);\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchDishes());\n  },[]);\n\n  const openDishCardHandler = (dish: string) => {\n    setOpenDishCard(true);\n    setDishName(dish);\n  };\n\n  const params: any = useParams();\n\n  const restaurantDetails = restaurants.filter(\n    (item: any) => item.name === params.restaurantName\n  );\n\n  const restaurantDishes = dishes.filter(\n    (item: any) => item.restaurant === params.restaurantName\n  );\n\n  const mealsTypes: string[] = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n\n  const passFilter = (item: any) => {\n    switch (filter) {\n      case \"all\":\n        return true;\n      case \"Breakfast\":\n        if (item.dishPage === '') {\n          return true;\n        } else return false;\n      case \"Lunch\":\n        if (item.isPopular) {\n          return true;\n        } else return false;\n      case \"Dinner\":\n        if (now >= opening && now <= closing) {\n          return true;\n        } else return false;\n      default:\n        return true;\n    }\n  };\n\n\n  const opening = restaurantDetails[0].openingHour.split(\":\")[0] * 1;\n  const closing = restaurantDetails[0].closingHour.split(\":\")[0] * 1;\n  const now = new Date().getHours();\n  const ifOpen: boolean = now >= opening && now <= closing;\n  return (\n    <div className=\"restaurant-page\">\n      <Header />\n      {openDishCard && (\n        <Fragment>\n          <button\n            className=\"dish-container\"\n            onClick={() => setOpenDishCard(false)}\n          ></button>{\" \"}\n          <button\n            className=\"close-dish-page\"\n            onClick={() => setOpenDishCard(false)}\n          >\n            X\n          </button>{\" \"}\n          <DishPage dish={dishName}></DishPage>\n        </Fragment>\n      )}\n      {!openDishCard && (\n        <div className=\"restaurant-page-container\">\n          <img\n            src={restaurantDetails[0].desktopImage}\n            alt=\"restaurant\"\n            className=\"restaurant-page-img\"\n            srcSet={`${restaurantDetails[0].bigImage} 800w`}\n          ></img>\n          <h1>{params.restaurantName}</h1>\n          <h2>{restaurantDetails[0].chef}</h2>\n          {ifOpen && (\n            <div>\n              <img src={clock} alt=\"clock\"></img> <span>Open now</span>\n            </div>\n          )}\n          <nav className=\"categories-div\">\n            {mealsTypes.map((type) => (\n              <a href={`#${type}`} className=\"type-meal-link\">\n                {type}\n              </a>\n            ))}\n          </nav>\n          <div className=\"meal-by-type\">\n            {mealsTypes.map((type) => {\n              return (\n                <Fragment>\n                  <div className=\"type-container\" id={type}>\n                    <h2>{type}</h2>\n                    <div className=\"type-line\"></div>\n                  </div>\n                  <div className=\"restaurants-container\">\n                    {restaurantDishes.map((dish: any) => {\n                      if (dish.dishType === mealsTypes[0])\n                        return (\n                          <button\n                            className=\"to-dish-btn\"\n                            onClick={() => openDishCardHandler(dish.name)}\n                          >\n                            <div className=\"restaurant-item\">\n                              <DishSmallCard\n                                img={dish.mobileImage}\n                                signatureDesktopImage={dish.desktopImage}\n                                title={dish.name}\n                                detail={dish.description}\n                                price={dish.price}\n                                key={dish.key}\n                              ></DishSmallCard>\n                            </div>\n                          </button>\n                        );\n                    })}\n                  </div>\n                </Fragment>\n              );\n            })}\n          </div>\n          <Footer />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RestaurantPage;\n"]},"metadata":{},"sourceType":"module"}