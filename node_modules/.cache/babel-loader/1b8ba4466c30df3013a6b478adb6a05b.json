{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/restaurantPage/RestaurantPage.tsx\",\n    _s = $RefreshSig$();\n\nimport clock from \"../../../assets/clock-icon.svg\";\nimport x from \"../../../assets/x.png\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./RestaurantPage.scss\";\nimport DishPage from \"../dishPage/DishPage\";\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect, Fragment, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchDishes } from \"../../../store/dishDataSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantPage = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [dishName, setDishName] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const {\n    restaurants\n  } = useSelector(state => state.restaurants);\n  const {\n    dishes\n  } = useSelector(state => state.dishes);\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchDishes());\n  }, []);\n\n  const openDishCardHandler = dish => {\n    setOpenDishCard(true);\n    setDishName(dish);\n  };\n\n  const params = useParams();\n  const restaurantDetails = restaurants.filter(item => item.name === params.restaurantName);\n  const restaurantDishes = dishes.filter(item => item.restaurant === params.restaurantName);\n  const mealsTypes = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n  const [filterType, setFilterType] = useState(\"all\");\n\n  const passFilter = item => {\n    switch (filterType) {\n      case \"all\":\n        return true;\n\n      case \"Breakfast\":\n        if (item.dishType === \"Breakfast\") {\n          return true;\n        } else return false;\n\n      case \"Lunch\":\n        if (item.dishType === \"Lunch\") {\n          return true;\n        } else return false;\n\n      case \"Dinner\":\n        if (item.dishType === \"Dinner\") {\n          return true;\n        } else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  const filteredArr = restaurantDishes.filter(item => passFilter(item));\n  const opening = restaurantDetails[0].openingHour.split(\":\")[0] * 1;\n  const closing = restaurantDetails[0].closingHour.split(\":\")[0] * 1;\n  const now = new Date().getHours();\n  const ifOpen = now >= opening && now <= closing;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), openDishCard && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dish-container\",\n        onClick: () => setOpenDishCard(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-dish-page\",\n        onClick: () => setOpenDishCard(false),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: x,\n          alt: \"x\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DishPage, {\n        dish: dishName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), !openDishCard && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: restaurantDetails[0].desktopImage,\n        alt: \"restaurant\",\n        className: \"restaurant-page-img\",\n        srcSet: `${restaurantDetails[0].bigImage} 800w`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: params.restaurantName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: restaurantDetails[0].chef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), ifOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: clock,\n          alt: \"clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Open now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"categories-div\",\n        children: mealsTypes.map(typeName => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilterType(typeName),\n          className: \"type-meal-link\",\n          children: typeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-by-type\",\n        children: filteredArr.map(type => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-container\",\n            id: type,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: type.dishType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"type-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurants-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"to-dish-btn\",\n              onClick: () => openDishCardHandler(type.name),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"restaurant-item\",\n                children: /*#__PURE__*/_jsxDEV(DishSmallCard, {\n                  img: type.mobileImage,\n                  signatureDesktopImage: type.desktopImage,\n                  title: type.name,\n                  detail: type.description,\n                  price: type.price\n                }, type.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantPage, \"bXm0G/3upWQbMpO4ziH6SugG92g=\", false, function () {\n  return [useAppDispatch, useSelector, useSelector, useParams];\n});\n\n_c = RestaurantPage;\nexport default RestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/restaurantPage/RestaurantPage.tsx"],"names":["clock","x","DishSmallCard","DishPage","useParams","Footer","Header","useSelector","useAppDispatch","useEffect","Fragment","useState","fetchRestaurants","fetchDishes","RestaurantPage","filter","openDishCard","setOpenDishCard","dishName","setDishName","dispatch","restaurants","state","dishes","openDishCardHandler","dish","params","restaurantDetails","item","name","restaurantName","restaurantDishes","restaurant","mealsTypes","filterType","setFilterType","passFilter","dishType","filteredArr","opening","openingHour","split","closing","closingHour","now","Date","getHours","ifOpen","desktopImage","bigImage","chef","map","typeName","type","mobileImage","description","price","key"],"mappings":"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","sourcesContent":["import clock from \"../../../assets/clock-icon.svg\";\nimport x from \"../../../assets/x.png\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./RestaurantPage.scss\";\nimport DishPage from \"../dishPage/DishPage\";\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport { useSelector } from \"react-redux\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect, Fragment, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchDishes } from \"../../../store/dishDataSlice\";\n\nconst RestaurantPage = ({ filter }: any) => {\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [dishName, setDishName] = useState(\"\");\n\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n  const { dishes } = useSelector((state: any) => state.dishes);\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchDishes());\n  }, []);\n\n  const openDishCardHandler = (dish: string) => {\n    setOpenDishCard(true);\n    setDishName(dish);\n  };\n\n  const params: any = useParams();\n\n  const restaurantDetails = restaurants.filter(\n    (item: any) => item.name === params.restaurantName\n  );\n\n  const restaurantDishes = dishes.filter(\n    (item: any) => item.restaurant === params.restaurantName\n  );\n\n  const mealsTypes: string[] = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n  const [filterType, setFilterType] = useState(\"all\");\n\n  const passFilter = (item: any) => {\n    switch (filterType) {\n      case \"all\":\n        return true;\n      case \"Breakfast\":\n        if (item.dishType === \"Breakfast\") {\n          return true;\n        } else return false;\n      case \"Lunch\":\n        if (item.dishType === \"Lunch\") {\n          return true;\n        } else return false;\n      case \"Dinner\":\n        if (item.dishType === \"Dinner\") {\n          return true;\n        } else return false;\n      default:\n        return true;\n    }\n  };\n  const filteredArr = restaurantDishes.filter((item: any) => passFilter(item));\n\n  const opening = restaurantDetails[0].openingHour.split(\":\")[0] * 1;\n  const closing = restaurantDetails[0].closingHour.split(\":\")[0] * 1;\n  const now = new Date().getHours();\n  const ifOpen: boolean = now >= opening && now <= closing;\n  return (\n    <div className=\"restaurant-page\">\n      <Header />\n      {openDishCard && (\n        <Fragment>\n          <button\n            className=\"dish-container\"\n            onClick={() => setOpenDishCard(false)}\n          ></button>\n          <button\n            className=\"close-dish-page\"\n            onClick={() => setOpenDishCard(false)}>\n            <img src={x} alt=\"x\"> </img>\n          </button>\n          <DishPage dish={dishName}></DishPage>\n        </Fragment>\n      )}\n      {!openDishCard && (\n        <div className=\"restaurant-page-container\">\n          <img\n            src={restaurantDetails[0].desktopImage}\n            alt=\"restaurant\"\n            className=\"restaurant-page-img\"\n            srcSet={`${restaurantDetails[0].bigImage} 800w`}\n          ></img>\n          <h1>{params.restaurantName}</h1>\n          <h2>{restaurantDetails[0].chef}</h2>\n          {ifOpen && (\n            <div>\n              <img src={clock} alt=\"clock\"></img> <span>Open now</span>\n            </div>\n          )}\n          <nav className=\"categories-div\">\n            {mealsTypes.map((typeName) => (\n              <button\n                onClick={() => setFilterType(typeName)}\n                className=\"type-meal-link\"\n              >\n                {typeName}\n              </button>\n            ))}\n          </nav>\n          \n          <div className=\"meal-by-type\">\n            {filteredArr.map((type: any) => (\n              <Fragment>\n                <div className=\"type-container\" id={type}>\n                  <h2>{type.dishType}</h2>\n                  <div className=\"type-line\"></div>\n                </div>\n                <div className=\"restaurants-container\">\n                  <button\n                    className=\"to-dish-btn\"\n                    onClick={() => openDishCardHandler(type.name)}\n                  >\n                    <div className=\"restaurant-item\">\n                      <DishSmallCard\n                        img={type.mobileImage}\n                        signatureDesktopImage={type.desktopImage}\n                        title={type.name}\n                        detail={type.description}\n                        price={type.price}\n                        key={type.key}\n                      ></DishSmallCard>\n                    </div>\n                  </button>\n                </div>\n              </Fragment>\n            ))}\n          </div>\n          <Footer />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RestaurantPage;\n"]},"metadata":{},"sourceType":"module"}