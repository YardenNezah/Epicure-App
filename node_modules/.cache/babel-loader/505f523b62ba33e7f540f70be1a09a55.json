{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { fetchPopularRestaurants } from \"../../../store/popularRestaurantsSlice\";\nimport { fetchOpenRestaurants } from \"../../../store/openRestaurantsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantsGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const [pageNumber, setPageNumber] = useState(1);\n  const dispatch = useAppDispatch();\n  const {\n    restaurants\n  } = useSelector(state => state.restaurants);\n  const {\n    newRestaurants\n  } = useSelector(state => state.newRestaurants);\n  const {\n    popularRestaurants\n  } = useSelector(state => state.popularRestaurants);\n  const {\n    openRestaurants\n  } = useSelector(state => state.openRestaurants);\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n    dispatch(fetchPopularRestaurants());\n    dispatch(fetchOpenRestaurants());\n  }, []);\n  console.log(restaurants);\n  console.log(newRestaurants); // const passFilter = (item: any) => {\n  //   switch (filter) {\n  //     case \"all\":\n  //       return true;\n  //     case \"new\":\n  //       if (item.isNewRestaurant) {\n  //         return true;\n  //       } else return false;\n  //     case \"popular\":\n  //       if (item.isPopular) {\n  //         return true;\n  //       } else return false;\n  //     case \"open\":\n  //       const opening:number = item.openingHour.split(\":\")[0] * 1;\n  //       const closing:number = item.closingHour.split(\":\")[0] * 1;\n  //       const date= new Date();\n  //       const now:number = date.getHours();\n  //       if (now >= opening && now <= closing) {\n  //         return true;\n  //       } else return false;\n  //     default:\n  //       return true;\n  //   }\n  // };\n  //const filteredArr: object[] = restaurants.filter((item: any) => passFilter(item));\n\n  const numberOfPages = Math.ceil(restaurants.length / 6);\n  let pages = [];\n\n  for (let page = 1; page <= numberOfPages; page++) {\n    pages.push( /*#__PURE__*/_jsxDEV(Link, {\n      className: \"page\",\n      to: `/restaurants/${page}`,\n      onClick: () => setPageNumber(page),\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: filter === \"popular\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: popularRestaurants.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/restaurant/${item.name}`,\n        className: \"to-restaurant-btn\",\n        children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n          title: item.name,\n          detail: item.chef,\n          img: item.mobileImage\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantsGrid, \"GpG46nuN9Arc/EevL+RJ2QC5Mv4=\", false, function () {\n  return [useAppDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RestaurantsGrid;\nexport default RestaurantsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx"],"names":["BeigeCard","useSelector","Link","useAppDispatch","Fragment","useEffect","useState","fetchRestaurants","fetchNewRestaurants","fetchPopularRestaurants","fetchOpenRestaurants","RestaurantsGrid","filter","pageNumber","setPageNumber","dispatch","restaurants","state","newRestaurants","popularRestaurants","openRestaurants","console","log","numberOfPages","Math","ceil","length","pages","page","push","map","item","name","chef","mobileImage","_id"],"mappings":"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","sourcesContent":["import BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { fetchPopularRestaurants } from \"../../../store/popularRestaurantsSlice\";\nimport { fetchOpenRestaurants } from \"../../../store/openRestaurantsSlice\";\n\nconst RestaurantsGrid = ({ filter }: any) => {\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n  const { newRestaurants } = useSelector((state: any) => state.newRestaurants);\n  const { popularRestaurants } = useSelector(\n    (state: any) => state.popularRestaurants\n  );\n  const { openRestaurants } = useSelector(\n    (state: any) => state.openRestaurants\n  );\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n    dispatch(fetchPopularRestaurants());\n    dispatch(fetchOpenRestaurants());\n  }, []);\n\n  console.log(restaurants);\n  console.log(newRestaurants)\n  // const passFilter = (item: any) => {\n  //   switch (filter) {\n  //     case \"all\":\n  //       return true;\n  //     case \"new\":\n  //       if (item.isNewRestaurant) {\n  //         return true;\n  //       } else return false;\n  //     case \"popular\":\n  //       if (item.isPopular) {\n  //         return true;\n  //       } else return false;\n  //     case \"open\":\n  //       const opening:number = item.openingHour.split(\":\")[0] * 1;\n  //       const closing:number = item.closingHour.split(\":\")[0] * 1;\n  //       const date= new Date();\n  //       const now:number = date.getHours();\n  //       if (now >= opening && now <= closing) {\n  //         return true;\n  //       } else return false;\n  //     default:\n  //       return true;\n  //   }\n  // };\n\n  //const filteredArr: object[] = restaurants.filter((item: any) => passFilter(item));\n  const numberOfPages: number = Math.ceil(restaurants.length / 6);\n  let pages = [];\n  for (let page = 1; page <= numberOfPages; page++) {\n    pages.push(\n      <Link\n        key={page}\n        className=\"page\"\n        to={`/restaurants/${page}`}\n        onClick={() => setPageNumber(page)}\n      >\n        {page}\n      </Link>\n    );\n  }\n\n  return (\n    <Fragment>\n      {filter === \"popular\" && (\n        <div>\n          {popularRestaurants.map((item: any) => (\n            <Link\n              to={`/restaurant/${item.name}`}\n              className=\"to-restaurant-btn\"\n              key={item._id}\n            >\n              <BeigeCard\n                key={item.name}\n                title={item.name}\n                detail={item.chef}\n                img={item.mobileImage}\n              ></BeigeCard>\n            </Link>\n          ))}\n        </div>\n      )}\n      {/* <div className=\"restaurants-grid\">\n        {filteredArr.length <= 6 &&\n          filteredArr.map((item: any) => (\n            <Link to={`/restaurant/${item.name}`} className=\"to-restaurant-btn\" key={item._id}>\n              <BeigeCard\n                key={item.name}\n                title={item.name}\n                detail={item.chef}\n                img={item.mobileImage}\n              ></BeigeCard>\n            </Link>\n          ))}\n      </div>\n      <Fragment>\n        {filteredArr.length > 6 && (\n          <Fragment>\n            <div className=\"restaurants-grid\">\n              {filteredArr\n                .slice(pageNumber * 6 - 6, pageNumber * 6)\n                .map((item: any) => (\n                  <Link\n                    to={`/restaurant/${item.name}`}\n                    className=\"to-restaurant-btn\" key={item._id}\n                  >\n                    <BeigeCard\n                      key={item.name}\n                      title={item.name}\n                      detail={item.chef}\n                      img={item.mobileImage}\n                    ></BeigeCard>\n                  </Link>\n                ))}\n            </div>\n            <div className=\"pagination\">{pages}</div>\n          </Fragment>\n        )}\n      </Fragment> */}\n    </Fragment>\n  );\n};\nexport default RestaurantsGrid;\n"]},"metadata":{},"sourceType":"module"}