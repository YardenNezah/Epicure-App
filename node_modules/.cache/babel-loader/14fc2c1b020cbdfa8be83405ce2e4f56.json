{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dishesSlice from \"./dishDataSlice\";\nimport restaurantsSlice from \"./RestaurantDataSlice\";\nimport chefsSlice from \"./chefDataSlice\";\nimport newRestaurantsSlice from \"./newRestaurantsSlice\";\nconst store = configureStore({\n  reducer: {\n    chefs: chefsSlice.reducer,\n    restaurants: restaurantsSlice.reducer,\n    dishes: dishesSlice.reducer,\n    newRestaurants: newRestaurantsSlice.reducer,\n    popularRestaurants: pop\n  }\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;\nexport default store;","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/store/store.ts"],"names":["configureStore","useDispatch","useSelector","dishesSlice","restaurantsSlice","chefsSlice","newRestaurantsSlice","store","reducer","chefs","restaurants","dishes","newRestaurants","popularRestaurants","pop","useAppDispatch","useAppSelector"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAGA,MAAMC,KAAK,GAAGP,cAAc,CAAC;AAC3BQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEJ,UAAU,CAACG,OADX;AAEPE,IAAAA,WAAW,EAAEN,gBAAgB,CAACI,OAFvB;AAGPG,IAAAA,MAAM,EAAER,WAAW,CAACK,OAHb;AAIPI,IAAAA,cAAc,EAAEN,mBAAmB,CAACE,OAJ7B;AAKPK,IAAAA,kBAAkB,EAAEC;AALb;AADkB,CAAD,CAA5B;AAWA,OAAO,MAAMC,cAAc,GAAG;AAAA;;AAAA,SAAMd,WAAW,EAAjB;AAAA,CAAvB;;GAAMc,c;UAAuBd,W;;;AACpC,OAAO,MAAMe,cAAc,GAAGd,WAAvB;AAEP,eAAeK,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dishesSlice from \"./dishDataSlice\";\nimport restaurantsSlice from \"./RestaurantDataSlice\";\nimport chefsSlice from \"./chefDataSlice\";\nimport newRestaurantsSlice from \"./newRestaurantsSlice\";\n\n\nconst store = configureStore({\n  reducer: {\n    chefs: chefsSlice.reducer,\n    restaurants: restaurantsSlice.reducer,\n    dishes: dishesSlice.reducer,\n    newRestaurants: newRestaurantsSlice.reducer,\n    popularRestaurants: pop\n  },\n});\n\n\nexport const useAppDispatch = () => useDispatch();\nexport const useAppSelector = useSelector;\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}