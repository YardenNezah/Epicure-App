{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { fetchPopularRestaurants } from \"../../../store/popularRestaurantsSlice\";\nimport { fetchOpenRestaurants } from \"../../../store/openRestaurantsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantsGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const [pageNumber, setPageNumber] = useState(1);\n  const filterValue = useParams();\n  const dispatch = useAppDispatch();\n  const {\n    restaurants\n  } = useSelector(state => state.restaurants);\n  const {\n    newRestaurants\n  } = useSelector(state => state.newRestaurants);\n  const {\n    popularRestaurants\n  } = useSelector(state => state.popularRestaurants);\n  const {\n    openRestaurants\n  } = useSelector(state => state.openRestaurants);\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n    dispatch(fetchPopularRestaurants());\n    dispatch(fetchOpenRestaurants());\n  }, []);\n  let filtered;\n\n  const passFilter = item => {\n    switch (filterValue.page) {\n      case \"all\":\n        filtered = restaurants;\n        return filtered;\n\n      case \"new\":\n        filtered = newRestaurants;\n        return filtered;\n\n      case \"popular\":\n        filtered = popularRestaurants;\n        return filtered;\n\n      case \"open\":\n        filtered = openRestaurants;\n        return filtered;\n\n      default:\n        filtered = restaurants;\n        return filtered;\n    }\n  };\n\n  console.log(filtered);\n  const filteredArr = restaurants.map(item => passFilter(item));\n  const numberOfPages = Math.ceil(filteredArr.length / 6);\n  let pages = [];\n\n  for (let page = 1; page <= numberOfPages; page++) {\n    pages.push( /*#__PURE__*/_jsxDEV(Link, {\n      className: \"page\",\n      to: `/restaurants/${page}`,\n      onClick: () => setPageNumber(page),\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [filtered, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurants-grid\",\n      children: filteredArr.length <= 6 && filteredArr.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/restaurant/${item.name}`,\n        className: \"to-restaurant-btn\",\n        children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n          title: item.name,\n          detail: item.chef,\n          img: item.mobileImage\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: filteredArr.length > 6 && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restaurants-grid\",\n          children: filteredArr.slice(pageNumber * 6 - 6, pageNumber * 6).map(item => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/restaurant/${item.name}`,\n            className: \"to-restaurant-btn\",\n            children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n              title: item.name,\n              detail: item.chef,\n              img: item.mobileImage\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: pages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantsGrid, \"qTlocmJS2ePqLI6D6U9ET6ZlX28=\", false, function () {\n  return [useParams, useAppDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RestaurantsGrid;\nexport default RestaurantsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx"],"names":["BeigeCard","useSelector","Link","useAppDispatch","Fragment","useEffect","useState","fetchRestaurants","fetchNewRestaurants","fetchPopularRestaurants","fetchOpenRestaurants","useParams","RestaurantsGrid","filter","pageNumber","setPageNumber","filterValue","dispatch","restaurants","state","newRestaurants","popularRestaurants","openRestaurants","filtered","passFilter","item","page","console","log","filteredArr","map","numberOfPages","Math","ceil","length","pages","push","name","chef","mobileImage","_id","slice"],"mappings":"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","sourcesContent":["import BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { fetchPopularRestaurants } from \"../../../store/popularRestaurantsSlice\";\nimport { fetchOpenRestaurants } from \"../../../store/openRestaurantsSlice\";\nimport { useParams } from \"react-router-dom\";\n\nconst RestaurantsGrid = ({ filter }: any) => {\n  const [pageNumber, setPageNumber] = useState(1);\n  const filterValue: any = useParams();\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n  const { newRestaurants } = useSelector((state: any) => state.newRestaurants);\n  const { popularRestaurants } = useSelector((state: any) => state.popularRestaurants);\n  const { openRestaurants } = useSelector((state: any) => state.openRestaurants);\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n    dispatch(fetchPopularRestaurants());\n    dispatch(fetchOpenRestaurants());\n  }, []);\nlet filtered:any;\n  const passFilter = (item: any) => {\n    switch (filterValue.page) {\n      case \"all\":\n        filtered=  restaurants;\n        return filtered;\n      case \"new\":\n        filtered=  newRestaurants;\n        return filtered;\n      case \"popular\":\n        filtered=  popularRestaurants;\n        return filtered;\n      case \"open\":\n        filtered=  openRestaurants;\n        return filtered;\n      default:\n        filtered=  restaurants;\n        return filtered;\n    }\n  };\nconsole.log(filtered)\n const filteredArr: object[] = restaurants.map((item:any)=> passFilter(item))\n  const numberOfPages:number = Math.ceil(filteredArr.length / 6);\n  let pages = [];\n  for (let page = 1; page <= numberOfPages; page++) {\n    pages.push(\n      <Link\n        key={page}\n        className=\"page\"\n        to={`/restaurants/${page}`}\n        onClick={() => setPageNumber(page)}>\n        {page}\n      </Link>\n    );\n  }\n\n  return (\n    <Fragment>\n      {filtered}\n      <div className=\"restaurants-grid\">\n        {filteredArr.length <= 6 &&\n          filteredArr.map((item: any) => (\n            <Link to={`/restaurant/${item.name}`} className=\"to-restaurant-btn\" key={item._id}>\n              <BeigeCard\n                key={item.name}\n                title={item.name}\n                detail={item.chef}\n                img={item.mobileImage}\n              ></BeigeCard>\n            </Link>\n          ))}\n      </div>\n      <Fragment>\n        {filteredArr.length > 6 && (\n          <Fragment>\n            <div className=\"restaurants-grid\">\n              {filteredArr\n                .slice(pageNumber * 6 - 6, pageNumber * 6)\n                .map((item: any) => (\n                  <Link\n                    to={`/restaurant/${item.name}`}\n                    className=\"to-restaurant-btn\" key={item._id}\n                  >\n                    <BeigeCard\n                      key={item.name}\n                      title={item.name}\n                      detail={item.chef}\n                      img={item.mobileImage}\n                    ></BeigeCard>\n                  </Link>\n                ))}\n            </div>\n            <div className=\"pagination\">{pages}</div>\n          </Fragment>\n        )}\n      </Fragment>\n    </Fragment>\n  );\n};\nexport default RestaurantsGrid;\n"]},"metadata":{},"sourceType":"module"}