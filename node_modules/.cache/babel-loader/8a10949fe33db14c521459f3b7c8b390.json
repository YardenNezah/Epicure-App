{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantsGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    restaurants\n  } = useSelector(state => state.restaurants);\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n  }, []);\n\n  const passFilter = item => {\n    switch (filter) {\n      case \"all\":\n        return true;\n\n      case \"new\":\n        if (item.isNewRestaurant) return true;else return false;\n\n      case \"popular\":\n        if (item.isPopular) return true;else return false;\n\n      case \"open\":\n        const opening = item.openingHour.split(\":\")[0] * 1;\n        const closing = item.closingHour.split(\":\")[0] * 1;\n        const date = new Date();\n        const now = date.getHours();\n        if (now >= opening && now <= closing) return true;else return false;\n\n      default:\n        return true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurants-grid\",\n    children: restaurants.map(item => {\n      if (passFilter(item) || restaurants.l) return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/restaurant/${item.name}`,\n        className: \"to-restaurant-btn\",\n        children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n          title: item.name,\n          detail: item.chef,\n          img: item.mobileImage\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantsGrid, \"XLwRLAwS3UhYz4UGXoM+SIl6grI=\", false, function () {\n  return [useAppDispatch, useSelector];\n});\n\n_c = RestaurantsGrid;\nexport default RestaurantsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx"],"names":["BeigeCard","useSelector","Link","useAppDispatch","useEffect","fetchRestaurants","RestaurantsGrid","filter","dispatch","restaurants","state","passFilter","item","isNewRestaurant","isPopular","opening","openingHour","split","closing","closingHour","date","Date","now","getHours","map","l","name","chef","mobileImage"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,uBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,gBAAT,QAAiC,oCAAjC;;;AAEA,MAAMC,eAAe,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAC3C,QAAMC,QAAQ,GAAGL,cAAc,EAA/B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBR,WAAW,CAAES,KAAD,IAAgBA,KAAK,CAACD,WAAvB,CAAnC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMM,UAAU,GAAIC,IAAD,IAAe;AAChC,YAAQL,MAAR;AACE,WAAK,KAAL;AACE,eAAO,IAAP;;AACF,WAAK,KAAL;AACE,YAAIK,IAAI,CAACC,eAAT,EAA0B,OAAO,IAAP,CAA1B,KACK,OAAO,KAAP;;AACP,WAAK,SAAL;AACE,YAAID,IAAI,CAACE,SAAT,EAAoB,OAAO,IAAP,CAApB,KACK,OAAO,KAAP;;AACP,WAAK,MAAL;AACE,cAAMC,OAAO,GAAGH,IAAI,CAACI,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAiC,CAAjD;AACA,cAAMC,OAAO,GAAGN,IAAI,CAACO,WAAL,CAAiBF,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,IAAiC,CAAjD;AACA,cAAMG,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,cAAMC,GAAG,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACA,YAAID,GAAG,IAAIP,OAAP,IAAkBO,GAAG,IAAIJ,OAA7B,EAAsC,OAAO,IAAP,CAAtC,KACK,OAAO,KAAP;;AACP;AACE,eAAO,IAAP;AAjBJ;AAmBD,GApBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cAEGT,WAAW,CAACe,GAAZ,CAAiBZ,IAAD,IAAe;AAC9B,UAAID,UAAU,CAACC,IAAD,CAAV,IAAoBH,WAAW,CAACgB,CAApC,EACE,oBACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,eAAcb,IAAI,CAACc,IAAK,EAAnC;AAAsC,QAAA,SAAS,EAAC,mBAAhD;AAAA,+BACE,QAAC,SAAD;AAEE,UAAA,KAAK,EAAEd,IAAI,CAACc,IAFd;AAGE,UAAA,MAAM,EAAEd,IAAI,CAACe,IAHf;AAIE,UAAA,GAAG,EAAEf,IAAI,CAACgB;AAJZ,WACOhB,IAAI,CAACc,IADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAUF,KAZD;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/CD;;GAAMpB,e;UACaH,c,EACOF,W;;;KAFpBK,e;AAgDN,eAAeA,eAAf","sourcesContent":["import BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { useEffect } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\n\nconst RestaurantsGrid = ({ filter }: any) => {\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n  },[]);\n\n  const passFilter = (item: any) => {\n    switch (filter) {\n      case \"all\":\n        return true;\n      case \"new\":\n        if (item.isNewRestaurant) return true;\n        else return false;\n      case \"popular\":\n        if (item.isPopular) return true;\n        else return false;\n      case \"open\":\n        const opening = item.openingHour.split(\":\")[0] * 1;\n        const closing = item.closingHour.split(\":\")[0] * 1;\n        const date = new Date();\n        const now = date.getHours();\n        if (now >= opening && now <= closing) return true;\n        else return false;\n      default:\n        return true;\n    }\n  };\n  return (\n    <div className=\"restaurants-grid\">\n      \n      {restaurants.map((item: any) => {\n        if (passFilter(item) || restaurants.l)\n          return (\n            <Link to={`/restaurant/${item.name}`} className=\"to-restaurant-btn\">\n              <BeigeCard\n                key={item.name}\n                title={item.name}\n                detail={item.chef}\n                img={item.mobileImage}\n              ></BeigeCard>\n            </Link>\n          );\n       })}\n    </div>\n  );\n};\nexport default RestaurantsGrid;\n"]},"metadata":{},"sourceType":"module"}