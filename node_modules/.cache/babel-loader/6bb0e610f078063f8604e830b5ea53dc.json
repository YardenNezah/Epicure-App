{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { fetchPopularRestaurants } from \"../../../store/popularRestaurantsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantsGrid = _ref => {\n  _s();\n\n  let {\n    filter\n  } = _ref;\n  const [pageNumber, setPageNumber] = useState(1);\n  const dispatch = useAppDispatch();\n  const {\n    restaurants\n  } = useSelector(state => state.restaurants);\n  const {\n    newRestaurants\n  } = useSelector(state => state.newRestaurants);\n  const {\n    popularRestaurants\n  } = useSelector(state => state.popularRestaurants);\n  const {\n    openRestaurants\n  } = useSelector(state => state.openRestaurants);\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n    dispatch(fetchPopularRestaurants());\n  }, []);\n  let pages = [];\n\n  for (let page = 1; page <= 2; page++) {\n    pages.push( /*#__PURE__*/_jsxDEV(Link, {\n      className: \"page\",\n      to: `/restaurants/${filter}/${page}`,\n      onClick: () => setPageNumber(page),\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [filter === \"popular\" && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurants-grid\",\n        children: popularRestaurants.map(item => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/restaurant/${item.name}`,\n          className: \"to-restaurant-btn\",\n          children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n            title: item.name,\n            detail: item.chef,\n            img: item.mobileImage\n          }, item.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), filter === \"all\" && pageNumber === 1 && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurants-grid\",\n        children: restaurants.map(item => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/restaurant/${item.name}`,\n          className: \"to-restaurant-btn\",\n          children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n            title: item.name,\n            detail: item.chef,\n            img: item.mobileImage\n          }, item.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: pages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), filter === \"new\" && pageNumber === 1 && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurants-grid\",\n        children: newRestaurants.map(item => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/restaurant/${item.name}`,\n          className: \"to-restaurant-btn\",\n          children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n            title: item.name,\n            detail: item.chef,\n            img: item.mobileImage\n          }, item.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantsGrid, \"GpG46nuN9Arc/EevL+RJ2QC5Mv4=\", false, function () {\n  return [useAppDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RestaurantsGrid;\nexport default RestaurantsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/EpicureApp/src/components/pages/allRestaurantsPage/RestaurantsGrid.tsx"],"names":["BeigeCard","useSelector","Link","useAppDispatch","Fragment","useEffect","useState","fetchRestaurants","fetchNewRestaurants","fetchPopularRestaurants","RestaurantsGrid","filter","pageNumber","setPageNumber","dispatch","restaurants","state","newRestaurants","popularRestaurants","openRestaurants","pages","page","push","map","item","name","chef","mobileImage","_id"],"mappings":"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","sourcesContent":["import BeigeCard from \"../../layout/card/BeigeCard\";\nimport { useSelector } from \"react-redux\";\nimport \"./AllRestaurants.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/store\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { fetchRestaurants } from \"../../../store/RestaurantDataSlice\";\nimport { fetchNewRestaurants } from \"../../../store/newRestaurantsSlice\";\nimport { fetchPopularRestaurants } from \"../../../store/popularRestaurantsSlice\";\nimport { fetchOpenRestaurants} from \"../../../store/open\"\nconst RestaurantsGrid = ({ filter }: any) => {\n  const [pageNumber, setPageNumber] = useState(1);\n\n\n  const dispatch = useAppDispatch();\n  const { restaurants } = useSelector((state: any) => state.restaurants);\n  const { newRestaurants } = useSelector((state: any) => state.newRestaurants);\n  const { popularRestaurants } = useSelector((state: any) => state.popularRestaurants);\n  const { openRestaurants } = useSelector((state: any) => state.openRestaurants);\n\n  useEffect(() => {\n    dispatch(fetchRestaurants());\n    dispatch(fetchNewRestaurants());\n    dispatch(fetchPopularRestaurants());\n  }, []);\n\n  let pages = [];\n  for (let page = 1; page <= 2; page++) {\n    pages.push(\n      <Link\n        key={page}\n        className=\"page\"\n        to={`/restaurants/${filter}/${page}`}\n        onClick={() => setPageNumber(page)}\n      >\n        {page}\n      </Link>\n    );\n  }\n  return (\n    <Fragment>\n      {filter === \"popular\" && (\n        <Fragment>\n          <div className=\"restaurants-grid\">\n            {popularRestaurants.map((item: any) => (\n              <Link\n                to={`/restaurant/${item.name}`}\n                className=\"to-restaurant-btn\"\n                key={item._id}\n              >\n                <BeigeCard\n                  key={item.name}\n                  title={item.name}\n                  detail={item.chef}\n                  img={item.mobileImage}\n                ></BeigeCard>\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      )}\n\n      {filter === \"all\" && pageNumber === 1 && (\n        <Fragment>\n          <div className=\"restaurants-grid\">\n            {restaurants.map((item: any) => (\n              <Link\n                to={`/restaurant/${item.name}`}\n                className=\"to-restaurant-btn\"\n                key={item._id}\n              >\n                <BeigeCard\n                  key={item.name}\n                  title={item.name}\n                  detail={item.chef}\n                  img={item.mobileImage}\n                ></BeigeCard>\n              </Link>\n            ))}\n          </div>\n          <div className=\"pagination\">{pages}</div>\n        </Fragment>\n      )}\n\n      {filter === \"new\" && pageNumber === 1 && (\n        <Fragment>\n          <div className=\"restaurants-grid\">\n            {newRestaurants.map((item: any) => (\n              <Link\n                to={`/restaurant/${item.name}`}\n                className=\"to-restaurant-btn\"\n                key={item._id}\n              >\n                <BeigeCard\n                  key={item.name}\n                  title={item.name}\n                  detail={item.chef}\n                  img={item.mobileImage}\n                ></BeigeCard>\n              </Link>\n            ))}\n          </div>       \n        </Fragment>\n        )}\n    </Fragment>\n  );\n};\nexport default RestaurantsGrid;\n"]},"metadata":{},"sourceType":"module"}